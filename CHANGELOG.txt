# orbit-predictor changelog

## 1.12.0 (2020-03-04)

* Require sgp4>=2.3
* Use mean Earth radius for illumination computation
* Use current date if not given in `get_only_position` too
* Document `mean_motion` (finally!)
* Add `R_E_MEAN_KM`, `ALPHA_UMB` and `ALPHA_PEN` constants
* Add `period` property to predictors
* Add `get_shadow`, `get_eclipse_duration`, `get_beta`, `get_normal_vector`
  and `eclipses_since` methods to predictors
* Make `sate_id` mandatory and `source` optional

## 1.11.0 (2019-12-27)

* Add `osculating_elements` property to Position that computes
  osculating orbital elements
* Add `is_sun_synchronous` function that checks if a Predictor
  represents a Sun-synchronous orbit
* Add Earth flattening and light speed to constants

## 1.10.0 (2019-11-27)

* Add get_shadow method that computes if a satellite is in shadow
* Add get_sun method that retrieves the ECI position of the Sun
* Add elevation and groundtrack generic APIs
* Rename LocationPredictor.propagator to predictor for clarity
* Make HighAccuracyTLEPropagator.propagator private
* Document Position.position_llh
* Add version to __init__.py
* Make propagate_eci public
* Raise error if propagation failed
* Fix J2Predictor.from_tle for non-epoch dates
* Add method to create predictor with repeating groundtrack
* Support Python 3.8
* Remove mentions to deprecated "precise" predictor

## 1.9.3 (2019-05-27)

* Fix a bug that prevented predictors from being pickeable

## 1.9.2 (2019-05-23)

* Fix leftover datetime wrong imports, increase coverage

## 1.9.1 (2019-04-14)

* Fix trivial import error in deprecated module

## 1.9.0 (2019-04-12)

* First Python-3 only release!
* Deprecated HighAccuracyTLEPredictor class, removed non-precise algorithm
* Added new Keplerian and J2 predictors based on classical orbital elements
* Added functions to create sun-synchronous satellites and planar constellations
* Added new NoradTLESource
* Fix off-nadir angle calculation
* Allow custom locations using an environment variable
* Do not round the microseconds internally, achieve much higher precision
  (validated against STK)
